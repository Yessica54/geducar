{"version":3,"sources":["repository/state/duck/data/type.js","repository/state/duck/data/initial.js","repository/state/duck/data/reducer.js","repository/DataRepository.js","repository/state/duck/data/action.js","repository/state/duck/data/selector.js","repository/state/duck/data/index.js","images/unnamed.png","pages/Home.js","pages/Comments.js","pages/Posts.js","images/geducar.png","components/layout/NavbarCustom.js","components/layout/Layout.js","pages/NotFound.js","components/App.js","repository/state/duck/error/type.js","repository/state/duck/error/initial.js","repository/state/duck/error/index.js","repository/state/duck/error/reducer.js","repository/state/duck/index.js","repository/state/store.js","reportWebVitals.js","index.js"],"names":["GETUSERS","GETPOSTS","GETCOMMENTS","initial","users","posts","comments","data","state","initialState","action","type","payload","getUsers","a","fetch","then","response","json","getPosts","idUser","getComments","idPost","dispatch","DataRepository","reducer","Home","this","props","Row","className","style","backgroundImage","fondo","backgroundRepeat","backgroundSize","backgroundPositionX","backgroundPositionY","backgroundColor","color","Container","fluid","Col","Table","striped","bordered","hover","responsive","align","map","user","index","id","name","username","email","phone","Button","size","to","Component","connect","dataSelectors","dataActions","useState","count","setCount","useEffect","postId","co","ListGroup","variant","comment","Item","body","title","Posts","match","params","post","Card","Body","Title","Text","Accordion","Header","Toggle","as","eventKey","Collapse","NavbarCustom","Navbar","bg","fixed","Brand","href","src","logo","width","height","alt","Nav","Link","fontWeight","React","Layout","Fragment","children","NotFound","App","basename","exact","path","component","CREATE","RESET","description","error","createStore","combineReducers","reducers","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efd334da.chunk.js","sourcesContent":["/**\r\n * %W% %E% Outloud\r\n *\r\n * Copyright (c) 2020 Outloud, Inc. All Rights Reserved.\r\n *\r\n * This software is the confidential and proprietary information of Outlout Inc.\r\n * (\"Confidential Information\"). You shall not\r\n * disclose such Confidential Information and shall use it only in\r\n * accordance with the terms of the license agreement you entered into\r\n * with Outloud.\r\n *\r\n * OUTLOUD MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF\r\n * THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\r\n * TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE, OR NON-INFRINGEMENT. OUTLOUD SHALL NOT BE LIABLE FOR\r\n * ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR\r\n * DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\nconst GETUSERS = `USERS/GET`;\r\nconst GETPOSTS = `POSTS/GET`;\r\nconst GETCOMMENTS = `COMMENTS/GET`;\r\n\r\nexport {GETUSERS, GETPOSTS, GETCOMMENTS};\r\n","const initial = () => ({\r\n\tusers: [],\r\n\tposts: [],\r\n\tcomments: [],\r\n});\r\n\r\nexport default initial();\r\n","\r\nimport {GETCOMMENTS, GETPOSTS, GETUSERS} from './type';\r\nimport initialState from './initial';\r\n\r\nconst data = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GETUSERS:\r\n\t\t\treturn {...state, users: action.payload};\r\n\t\tcase GETPOSTS:\r\n\t\t\treturn {...state, posts: action.payload};\r\n\t\tcase GETCOMMENTS:\r\n\t\t\treturn {...state, comments: action.payload};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default {data};\r\n","\r\nconst getUsers = async() => \r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {return users} );\r\n\r\nconst getPosts= async(idUser) => \r\n    fetch(`https://jsonplaceholder.typicode.com/users/${idUser}/posts`)\r\n        .then(response => response.json())\r\n        .then(posts => {return posts} );\r\n\r\nconst getComments= async(idPost) => \r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${idPost}/comments`)\r\n        .then(response => response.json())\r\n        .then(comments => {return comments} );\r\n\r\n\r\nexport default {\r\n\tgetUsers,\r\n    getPosts,\r\n    getComments\r\n};\r\n","import {GETPOSTS, GETUSERS, GETCOMMENTS} from './type';\r\nimport DataRepository from './../../../DataRepository';\r\n\r\nexport const getUsers = () => async dispatch =>\r\n\tdispatch({ type: GETUSERS, payload: await DataRepository.getUsers() });\r\n\r\nexport const getPosts = (idUser) => async dispatch =>\r\n\tdispatch({ type: GETPOSTS, payload: await DataRepository.getPosts(idUser)});\r\n\r\nexport const getComments = (idPost) => async dispatch =>\r\n\tdispatch({ type: GETCOMMENTS, payload: await DataRepository.getComments(idPost)});\r\n\r\nexport default {\r\n\tgetUsers,\r\n\tgetPosts,\r\n\tgetComments\r\n};\r\n","\r\nexport const getUsers= state => state.data.users;\r\nexport const getPosts= state => state.data.posts;\r\nexport const getComments= state => state.data.comments;\r\n\r\nexport default {\r\n\tgetUsers,\r\n\tgetPosts,\r\n\tgetComments\r\n};\r\n","import reducer from './reducer';\r\n\r\nimport * as dataActions from './action';\r\nimport * as dataSelectors from './selector';\r\nimport * as dataTypes from './type';\r\n\r\nexport {dataActions, dataSelectors, dataTypes, reducer};\r\n\r\nexport default reducer;\r\n","export default __webpack_public_path__ + \"static/media/unnamed.9ad32374.png\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { dataActions, dataSelectors } from '../repository/state/duck/data';\r\nimport { connect } from 'react-redux'\r\nimport fondo from './../images/unnamed.png'\r\n\r\nclass Home extends Component {\r\n\r\n    async componentDidMount(){\r\n        await this.props.getUsers();\r\n    }\r\n\r\n    \r\n    render() {\r\n        return(\r\n            <>\r\n                <Row className=\"mt-5 p-5 text-center\" style={{\r\n                    backgroundImage: `url(${fondo})`,\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundSize: '17% 77%',\r\n                    backgroundPositionX: '16%',\r\n                    backgroundPositionY: 'center',\r\n                    backgroundColor: '#ffdf00',\r\n                    color: '#15869D'\r\n                }}>\r\n                    <Container fluid=\"md\">\r\n                        <Col>\r\n                            <h1>Lists Users</h1>\r\n                        </Col>\r\n                    </Container>\r\n                </Row>\r\n                <Container fluid=\"md\">\r\n                    <Row className=\"mt-5\">\r\n                        <Col>\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr align=\"center\">\r\n                                        <th>#</th>\r\n                                        <th>Name</th>\r\n                                        <th>Username</th>\r\n                                        <th>Email</th>\r\n                                        <th>Phone</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.props.users.map((user, index) => {\r\n                                        return (\r\n                                            <tr key={index} align=\"center\">\r\n                                                <td>{user.id}</td>\r\n                                                <td>{user.name}</td>\r\n                                                <td>{user.username}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.phone}</td>\r\n                                                <td>\r\n                                                    <Button size=\"sm\" style={{backgroundColor: '#15869D'}}>\r\n                                                        <Link to={`/posts/${user.id}/${user.name}`} className=\"text-white text-decoration-none\">\r\n                                                            Posts\r\n                                                        </Link>\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    users: dataSelectors.getUsers(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUsers: () => dispatch(dataActions.getUsers()),\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n)(Home);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dataActions, dataSelectors } from '../repository/state/duck/data';\r\nimport { connect } from 'react-redux';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction Comments(props) {\r\n\r\n    const [count, setCount] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        let co = await props.getComments(props.postId);\r\n        setCount(co.payload)\r\n    }, []); \r\n\r\n    return (\r\n        <ListGroup variant=\"flush\">\r\n            {count.map((comment, index) => {\r\n                return(\r\n                    <ListGroup.Item key={index}>\r\n                        <blockquote >\r\n                            <p>\r\n                                <strong>{comment.name}</strong><br/>\r\n                                <small>{comment.body}</small>\r\n                            </p>\r\n                            <footer className=\"blockquote-footer\">\r\n                                <cite title=\"Source Title\">{comment.email}</cite>\r\n                            </footer>\r\n                        </blockquote>\r\n                    </ListGroup.Item>\r\n                )\r\n            })}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: dataSelectors.getComments(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getComments: (idPost) => dispatch(dataActions.getComments(idPost)),\r\n});\r\n\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n)(Comments);\r\n","import React, { Component } from 'react';\r\nimport { dataActions, dataSelectors } from '../repository/state/duck/data';\r\nimport { connect } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Comments from './Comments';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport fondo from './../images/unnamed.png'\r\n\r\n\r\nclass Posts extends Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tidUser: this.props.match.params.idUser,\r\n            name: this.props.match.params.name\r\n\t\t};\r\n\t}\r\n\r\n    async componentDidMount(){\r\n        await this.props.getPosts(this.state.idUser);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <Row className=\"mt-5 p-5 text-center\" style={{\r\n                backgroundImage: `url(${fondo})`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: '17% 77%',\r\n                backgroundPositionX: '16%',\r\n                backgroundPositionY: 'center',\r\n                backgroundColor: '#ffdf00',\r\n                color: '#15869D'\r\n            }}>\r\n                <Container fluid=\"md\">\r\n                    <Col>\r\n                        <h1> Posts by {this.state.name}</h1>\r\n                    </Col>\r\n                </Container>\r\n            </Row>\r\n            <Container fluid=\"md\">\r\n                <Row className=\"mt-2 mb-4\">\r\n                    <Col>\r\n                        {this.props.posts.map((post, index) => {\r\n                            return ( \r\n                                <Card  key={index} className=\"mt-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Title>{post.title}</Card.Title>\r\n                                        <Card.Text>{post.body}</Card.Text>\r\n                                    </Card.Body>\r\n                                    <Accordion>\r\n                                        <Card>\r\n                                            <Card.Header style={{backgroundColor: '#15869D'}}>\r\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey={index+1} className=\"text-white text-decoration-none\">\r\n                                                Comments\r\n                                            </Accordion.Toggle>\r\n                                            </Card.Header>\r\n                                            <Accordion.Collapse eventKey={index+1}>\r\n                                                <Comments postId={post.id}/>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                    </Accordion>\r\n                                </Card> \r\n                            )\r\n                        })}\r\n                    </Col>  \r\n                </Row>\r\n                \r\n            </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: dataSelectors.getPosts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getPosts: (idUser) => dispatch(dataActions.getPosts(idUser)),\r\n    getComments: (idPost) => dispatch(dataActions.getComments(idPost)),\r\n});\r\n\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n)(Posts);","export default __webpack_public_path__ + \"static/media/geducar.3cd67a75.png\";","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport logo from './../../images/geducar.png';\r\n\r\nclass NavbarCustom extends React.Component {\r\n    render() {\r\n      return (\r\n        <Navbar bg=\"light\" variant=\"light\" fixed=\"top\">\r\n            <Container fluid=\"md\">\r\n              <Navbar.Brand href=\"/geducar/\">\r\n                <img\r\n                  src={logo}\r\n                  width=\"120\"\r\n                  height=\"40\"\r\n                  className=\"d-inline-block align-top\"\r\n                  alt=\"React Bootstrap logo\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/geducar/\" style={{color: '#15869D', fontWeight: 600}}>Home</Nav.Link>\r\n              </Nav>\r\n            </Container>\r\n        </Navbar>\r\n      );\r\n    }\r\n}\r\n\r\nexport default NavbarCustom;\r\n","'use strict'\r\n\r\nimport React from 'react';\r\nimport NavbarCustom from './NavbarCustom';\r\n\r\nfunction Layout(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <NavbarCustom/>\r\n        {props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\nexport default Layout;","import React, { Component } from 'react';\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return(\r\n            <h1>NotFound</h1>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Posts from '../pages/Posts';\nimport Layout from '../components/layout/Layout';\nimport NotFound from '../pages/NotFound';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename='/geducar'>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact name=\"posts\" path=\"/posts/:idUser/:name\" component={Posts} />\n          {/* <Route exact path=\"/badges\" component={Badges} />\n          <Route exact path=\"/badges/new\" component={BadgeNew} />\n          <Route exact path=\"/badges/:badgeId\" component={BadgeDetails} />\n          <Route exact path=\"/badges/:badgeId/edit\" component={BadgeEdit} /> */}\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/**\r\n * %W% %E% Outloud\r\n *\r\n * Copyright (c) 2020 Outloud, Inc. All Rights Reserved.\r\n *\r\n * This software is the confidential and proprietary information of Outlout Inc.\r\n * (\"Confidential Information\"). You shall not\r\n * disclose such Confidential Information and shall use it only in\r\n * accordance with the terms of the license agreement you entered into\r\n * with Outloud.\r\n *\r\n * OUTLOUD MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF\r\n * THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\r\n * TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE, OR NON-INFRINGEMENT. OUTLOUD SHALL NOT BE LIABLE FOR\r\n * ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR\r\n * DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\nconst CREATE = `ERROR/CREATE`;\r\nconst RESET = `ERROR/RESET`;\r\nconst TRIAL_ERROR = `ERROR/TRIAL`;\r\nconst LEVEL_UP = `MESSAGE/LEVEL_UP`;\r\n\r\nexport {CREATE, RESET, TRIAL_ERROR, LEVEL_UP};\r\n","const initial = () => ({\r\n\tdescription: null\r\n});\r\n\r\nexport default initial();\r\n","import reducer from './reducer';\r\n\r\nimport * as errorActions from './action';\r\nimport * as errorSelectors from './selector';\r\nimport * as errorTypes from './type';\r\n\r\nexport {errorActions, errorSelectors, errorTypes, reducer};\r\n\r\nexport default reducer;\r\n","\r\nimport {CREATE, RESET} from './type';\r\nimport initialState from './initial';\r\n\r\nconst error = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CREATE:\r\n\t\t\treturn {...state, description: action.payload};\r\n\t\tcase RESET:\r\n\t\t\treturn {...state, ...initialState};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default {error};\r\n","import {default as error} from './error';\r\nimport {default as data} from './data';\r\n\r\nexport default {\r\n\t...error,\r\n\t...data\r\n};\r\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducers from './duck';\r\n\r\nexport default createStore(combineReducers(reducers), applyMiddleware(thunkMiddleware));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport store from './repository/state/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}